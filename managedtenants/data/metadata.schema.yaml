---
"$schema": "http://json-schema.org/draft-07/schema#"
type: object
additionalProperties: false
properties:
  id:
    pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]$
    type: string
    description: "Unique ID of the addon."
  name:
    type: string
    pattern: ^[0-9A-Z][A-Za-z0-9-_ ()]+$
    description: "Friendly name for the addon, displayed in the UI."
  description:
    type: string
    format: printable
    description: "Short description for the addon."
  link:
    type: string
    pattern: ^http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$
    description: "Link to the addon documentation."
  icon:
    type: string
    contentEncoding: base64
    contentMediaType: image/png
    format: printable
    description: "Icon to be shown in UI. Should be around 200px and base64 encoded."
  label:
    type: string
    pattern: ^api\.openshift\.com/addon-[0-9a-z][0-9a-z-]{0,30}[0-9a-z]$
    description: "Kubernetes label for the addon. Needs to match: 'api.openshift.com/<addon-id>'."
  enabled:
    type: boolean
    description: "Set to true to allow installation of the addon."
  hasExternalResources:
    type: boolean
  addonOwner:
    type: string
    pattern: ^([A-Za-z -]+ <[0-9A-Za-z_.-]+@redhat\.com>,?)+$
    description: "Team or individual responsible for this addon. Needs to match: 'some name <some-email@redhat.com>'."
  addonNotifications:
    type: array
    items:
      type: string
      pattern: ^([A-Za-z -]+ <[0-9A-Za-z_.-]+@redhat\.com>,?)+$
  quayRepo:
    type: string
    pattern: ^quay\.io/osd-addons/[a-z-]+$
    description: "Quay repository for the addon operator. Needs to match: 'quay.io/osd-addons/<my-addon-repo>'."
  testHarness:
    type: string
    pattern: ^quay\.io/[0-9A-Za-z._-]+/[0-9A-Za-z._-]+(:[A-Za-z0-9._-]+)?$
    description: "Quay repository for the testHarness image. Needs to match: 'quay.io/<my-repo>/<my-test-harness>:<my-tag>'."
  installMode:
    type: string
    enum:
      - AllNamespaces
      - SingleNamespace
      - OwnNamespace
    description: "OLM InstallMode for the addon operator."
  manualInstallPlanApproval:
    type: boolean
  targetNamespace:
    type: string
    pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
    description: "Namespace where the addon operator should be installed."
  namespaces:
    type: array
    items:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
    description: "Namespaces managed by the addon-operator. Need to include the TargetNamespace."
  pullSecret:
    type: string
    format: printable
  namespaceLabels:
    type: object
    items:
      type: string
      pattern: ^[A-Za-z0-9-_.]+$
    description: "Labels to be applied on all listed namespaces."
  namespaceAnnotations:
    type: object
    items:
      type: string
      pattern: ^[A-Za-z0-9-_.]+$
    description: "Annotations to be applied on all listed namespaces."
  commonLabels:
    type: object
    items:
      type: string
      pattern: ^[A-Za-z0-9-_.]+$
    description: "Labels to be applied to all objects created in the SelectorSyncSet."
  commonAnnotations:
    type: object
    items:
      type: string
      pattern: ^[A-Za-z0-9-_.]+$
    description: "Annotations to be applied to all objects created in the SelectorSyncSet."
  monitoring:
    type: object
    description: "Configuration parameters to be injected in the ServiceMonitor used for federation. The target prometheus server found by matchLabels needs to serve service-ca signed TLS traffic (https://docs.openshift.com/container-platform/4.6/security/certificate_types_descriptions/service-ca-certificates.html), and it needs to be runing inside the monitoring.namespace, with the service name 'prometheus'."
    additionalProperties: false
    required:
      - namespace
      - matchNames
      - matchLabels
    properties:
      namespace:
        type: string
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
        description: "Namespace where the prometheus server is running."
      matchNames:
        type: array
        items:
          type: string
          format: printable
          pattern: ^[A-Za-z0-9-_.]+$
        description: "List of series names to federate from the prometheus server."
      matchLabels:
        type: object
        items:
          type: string
          format: printable
          pattern: ^[A-Za-z0-9-_.]+$
        description: "List of labels used to discover the prometheus server(s) to be federated."
        minItems: 1
  defaultChannel:
    type: string
    enum:
      - alpha
      - beta
      - stable
      - edge
      - rc
    description: "OLM channel from which to install the addon-operator."
  ocmQuotaName:
    type: string
    pattern: ^[A-Za-z0-9][A-Za-z0-9-_]{0,35}[A-Za-z0-9]$
    description: "Refers to the SKU name for the addon."
  ocmQuotaCost:
    type: integer
    minimum: 0
  operatorName:
    type: string
    pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,30}[A-Za-z0-9]$
    description: "Name of the addon operator."
  bundleParameters:
    type: object
    additionalProperties: false
    properties:
      useClusterStorage:
        type: string
        pattern: ^(true|false|^$)$
      alertingEmailAddress:
        type: string
        pattern: ^([0-9A-Za-z_.-]+@redhat\.com,? ?)+$
      buAlertingEmailAddress:
        type: string
        pattern: ^([0-9A-Za-z_.-]+@redhat\.com,? ?)+$
      alertSMTPFrom:
        type: string
        pattern: ^[0-9A-Za-z._-]+@(devshift\.net|rhmw\.io)$
      addonParamsSecretName:
        type: string
        pattern: ^addon-[0-9A-Za-z-]+-parameters$
  channels:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          format: printable
        currentCSV:
          type: string
          format: printable
  startingCSV:
    type: string
    format: printable
  indexImage:
    type: string
    pattern: ^quay\.io/osd-addons/[a-z-]+
  addonImageSetVersion:
    type: string
    description: "A string which specifies the imageset to use. Can either be 'latest' or a version string)"
  pagerduty:
    type: object
    additionalProperties: false
    required:
      - escalationPolicy
      - acknowledgeTimeout
      - resolveTimeout
      - secretName
      - secretNamespace
    properties:
      escalationPolicy:
        type: string
        pattern: ^[A-Za-z0-9]+$
      acknowledgeTimeout:
        type: integer
        minimum: 0
      resolveTimeout:
        type: integer
        minimum: 0
      secretName:
        type: string
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
      secretNamespace:
        type: string
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
  deadmanssnitch:
    type: object
    additionalProperties: false
    description: "Denotes the Deadmans Snitch Configuration which is supposed to be setup alongside the Addon."
    required:
      - tags
    properties:
      clusterDeploymentSelector:
        type: object ## should we go as granular as describing properties for matchExpressions/matchLabels?
        description: "Default: check selectorsyncset.yaml.j2 - line 260"
      snitchNamePostFix:
        type: string
        pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
        description: "Default: {{ADDON.metadata['id']}}"
      targetSecretRef:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
            pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
            description: "Default: {{ADDON.metadata['id']}}-deadmanssnitch"
          namespace:
            type: string
            pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
            description: "Default: {{ADDON.metadata['targetNamespace']}}"
      tags:
        type: array
        items:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9-]{0,60}[A-Za-z0-9]$
  extraResources:
    type: array
    items:
      type: string
      format: printable
    description: "Extra Resources to be applied to the Hive cluster."
  addOnParameters:
    type: array
    items:
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - description
        - value_type
        - required
        - editable
        - enabled
      properties:
        id:
          type: string
          format: printable
        name:
          type: string
          format: printable
        description:
          type: string
          format: printable
        value_type:
          type: string
          enum:
            - string
            - number
            - boolean
            - cidr
            - resource
        validation:
          type: string
          format: printable
        required:
          type: boolean
        editable:
          type: boolean
        enabled:
          type: boolean
        default_value:
          type: string
          format: printable
        options:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - name
              - value
            properties:
              name:
                type: string
                format: printable
              value:
                type: string
                format: printable
        conditions:
          type: array
          items:
            type: object
            additionalProperties: false
            required:
              - resource
              - data
            properties:
              resource:
                type: string
                enum:
                  - cluster
              data:
                type: object
                additionalProperties: false
                properties:
                  aws.sts.enabled:
                    type: boolean
                  ccs.enabled:
                    type: boolean
                  cloud_provider.id:
                    type: array
                    items:
                      type: string
                      format: printable
                  product.id:
                    type: array
                    items:
                      type: string
                      format: printable
                  version.raw_id:
                    type: string
                    format: printable
  addOnRequirements:
    type: array
    items:
      type: object
      additionalProperties: false
      required:
        - id
        - resource
        - data
        - enabled
      properties:
        id:
          type: string
          format: printable
        resource:
          type: string
          enum:
            - cluster
            - addon
            - machine_pool
        data:
          type: object
          additionalProperties: false
          properties:
            id:
              type: string
              format: printable
            #AddOn
            state:
              type: string
              format: printable
            #Cluster
            aws.sts.enabled:
              type: boolean
            cloud_provider.id:
              type: array
              items:
                type: string
                format: printable
            product.id:
              type: array
              items:
                type: string
                format: printable
            compute.memory:
              type: integer
            compute.cpu:
              type: integer
            ccs.enabled:
              type: boolean
            nodes.compute:
              type: integer
            nodes.compute_machine_type.id:
              type: array
              items:
                type: string
                format: printable
            version.raw_id:
              type: string
              format: printable
            #MachinePool
            instance_type:
              type: array
              items:
                type: string
                format: printable
            replicas:
              type: integer
        enabled:
          type: boolean
  subOperators:
    type: array
    description: "Representation of an add-on sub operator. A sub operator is an operator who's life cycle is controlled by the add-on umbrella operator."
    items:
      type: object
      additionalProperties: false
      required:
        - operator_name
        - operator_namespace
        - enabled
      properties:
        operator_name:
          type: string
          format: printable
          description: "Name of the add-on sub operator"
        operator_namespace:
          type: string
          format: printable
          description: "Namespace of the add-on sub operator"
        enabled:
          type: boolean
          description: "Indicates if the sub operator is enabled for the add-on"
  # Default subscriptionConfig to be applied to the addon. If subscriptionConfig is present
  # in an imageset file, that will take precedence over this.
  subscriptionConfig:
    type: object
    description: "Configs to be passed to the subscription OLM object"
    additionalProperties: false
    required:
      - env
    properties:
      env:
        type: array
        description: "Array of environment variables (name, value pair) to be created as part of the subscription object"
        items:
          type: object
          additionalProperties: false
          required:
            - name
            - value
          properties:
            name:
              type: string
              format: printable
            value:
              type: string
              format: printable
required:
  - id
  - name
  - description
  - icon
  - label
  - enabled
  - addonOwner
  - quayRepo
  - testHarness
  - installMode
  - targetNamespace
  - namespaces
  - ocmQuotaName
  - ocmQuotaCost
  - operatorName
  - defaultChannel
  - namespaceLabels
  - namespaceAnnotations
