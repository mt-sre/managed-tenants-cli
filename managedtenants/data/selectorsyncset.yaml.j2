{# vi: ft=jinja : #}
{% from 'macros.j2' import maybe_labels, maybe_annotations, render_extra_resource, expand_dict %}
---
kind: List
metadata: {}
apiVersion: v1
items:
{# addon v1 create OLM resources manually #}
{% if ADDON.manager == AddonManager.UKNOWN %}
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    name: addon-{{ADDON.metadata['id']}}
  spec:
    clusterDeploymentSelector:
      matchLabels:
        {{ADDON.metadata['label']}}: 'true'
    resourceApplyMode: Sync
    resources:

{% for namespace in ADDON.metadata['namespaces'] %}
    - apiVersion: v1
      kind: Namespace
      metadata:
        {{
            maybe_annotations(ADDON.metadata.get('namespaceAnnotations', {})
              | merge_dicts(ADDON.metadata.get('commonAnnotations', {}))
              | merge_dicts({'openshift.io/node-selector': ''}))
              | indent(8)
        }}
        {{
            maybe_labels(ADDON.metadata['namespaceLabels']
              | merge_dicts(ADDON.metadata.get('commonLabels', {})))
              | indent(8)
        }}
        name: {{namespace}}

    {% if ADDON.metadata['pullSecret'] is defined %}
    - apiVersion: v1
      kind: Secret
      metadata:
        name: addon-{{ADDON.metadata['id']}}-pullsecret
        namespace: {{namespace}}
        {{ maybe_annotations(ADDON.metadata.get('commonAnnotations')) | indent(8) }}
        {{
            maybe_labels(ADDON.metadata.get('commonLabels', {})
              | merge_dicts({'addon-pullsecret': ADDON.metadata['id']}))
              | indent(8)
        }}
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: >-
          {{ADDON.metadata['pullSecret']}}
    {% endif %}
{% endfor %}

    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        name: addon-{{ADDON.metadata['id']}}-catalog
        namespace: openshift-marketplace
        {{ maybe_annotations(ADDON.metadata.get('commonAnnotations')) | indent(8) }}
        {{ maybe_labels(ADDON.metadata.get('commonLabels')) | indent(8) }}
      spec:
        displayName: {{ADDON.metadata['name']}}
        image: {{ADDON.image_tag.format(hash='${IMAGE_TAG}')}}
        publisher: OSD Red Hat Addons
        sourceType: grpc

{% if ADDON.metadata['namespaces'] %}
    - apiVersion: operators.coreos.com/v1alpha2
      kind: OperatorGroup
      metadata:
        name: redhat-layered-product-og
        namespace: {{ADDON.metadata['targetNamespace']}}
        {{ maybe_annotations(ADDON.metadata.get('commonAnnotations')) | indent(8) }}
        {{ maybe_labels(ADDON.metadata.get('commonLabels')) | indent(8) }}
      {% if ADDON.metadata['installMode'] == 'OwnNamespace' %}
      spec:
        targetNamespaces:
          - {{ADDON.metadata['targetNamespace']}}
      {% endif %}
{% endif %}

    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: addon-{{ADDON.metadata['id']}}
        namespace: {{ADDON.metadata['targetNamespace']}}
        {{ maybe_annotations(ADDON.metadata.get('commonAnnotations')) | indent(8) }}
        {{ maybe_labels(ADDON.metadata.get('commonLabels')) | indent(8) }}
      spec:
        channel: {{ADDON.metadata['defaultChannel']}}
        name: {{ADDON.metadata['id']}}
        source: addon-{{ADDON.metadata['id']}}-catalog
        sourceNamespace: openshift-marketplace
        {% if ADDON.get_subscription_config() %}
        config:
          env:
          {% for env_obj in ADDON.get_subscription_config().get("env") %}
          - name: {{env_obj['name']}}
            value: {{env_obj['value']}}
          {% endfor %}
        {% endif %}

{% if ADDON.metadata['manualInstallPlanApproval'] is defined and ADDON.metadata['manualInstallPlanApproval'] %}
        installPlanApproval: Manual
{% endif %}
{% if ADDON.metadata['startingCSV'] is defined %}
        startingCSV: {{ADDON.metadata['startingCSV']}}
{% endif %}

{# federated metrics namespace + ServiceMonitor (v1 only) #}
{% if ADDON.metadata['monitoring'] is defined %}
    - apiVersion: v1
      kind: Namespace
      metadata:
        name: redhat-monitoring-{{ ADDON.metadata['id'] }}
        labels:
          openshift.io/cluster-monitoring: 'true'
    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      metadata:
        name: federated-sm-{{ ADDON.metadata['id'] }}
        namespace: redhat-monitoring-{{ ADDON.metadata['id'] }}
      spec:
        endpoints:
          - honorLabels: true
            port: "9090"
            path: /federate
            scheme: https
            interval: 30s
            tlsConfig:
              ca:
                configMap:
                  name: openshift-service-ca.crt
                  key: service-ca.crt
              serverName: prometheus.{{ ADDON.metadata['monitoring']['namespace'] }}.svc
            params:
              'match[]':
                - ALERTS{alertstate="firing"}
              {% for matchName in ADDON.metadata['monitoring']['matchNames'] %}
                - '{__name__="{{ matchName }}"}'
              {% endfor %}
        namespaceSelector:
          matchNames:
            - {{ ADDON.metadata['monitoring']['namespace'] }}
        selector:
          matchLabels:
            {{ expand_dict(ADDON.metadata['monitoring']['matchLabels']) | indent(12) }}
{% endif %}

{# addon v2 create the Addon CR #}
{% elif ADDON.manager == AddonManager.ADDON_OPERATOR %}
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    name: addon-{{ADDON.metadata['id']}}
  spec:
    clusterDeploymentSelector:
      matchLabels:
        {{ADDON.metadata['label']}}: 'true'
    resourceApplyMode: Sync
    resources:
{% if (ADDON.metadata.get('indexImage') or ADDON.imageset) %}
    - apiVersion: addons.managed.openshift.io/v1alpha1
      kind: Addon
      metadata:
        name: {{ADDON.metadata['id']}}
      spec:
        displayName: {{ADDON.metadata['name']}}
        namespaces:
{% for namespace in ADDON.metadata['namespaces'] %}
        - name: {{namespace}}
{% endfor %}
        install:
          type: OLMOwnNamespace
          olmOwnNamespace:
            namespace: {{ADDON.metadata['targetNamespace']}}
            packageName: {{ADDON.metadata['operatorName']}}
            channel: {{ADDON.metadata['defaultChannel']}}
            catalogSourceImage: {{ADDON.metadata.get('indexImage') or ADDON.imageset['indexImage']}}
            {% if ADDON.get_subscription_config() %}
            config:
              env:
              {% for env_obj in ADDON.get_subscription_config().get("env") %}
              - name: {{env_obj['name']}}
                value: {{env_obj['value']}}
              {% endfor %}
            {% endif %}
{% endif %}
{# TODO: move pullsecret management into the addon-operator #}
{% for namespace in ADDON.metadata['namespaces'] %}
    {% if ADDON.metadata['pullSecret'] is defined %}
    - apiVersion: v1
      kind: Secret
      metadata:
        name: addon-{{ADDON.metadata['id']}}-pullsecret
        namespace: {{namespace}}
      labels:
        addon-pullsecret: "{{ADDON.metadata['id']}}"
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: >-
          {{ADDON.metadata['pullSecret']}}
    {% endif %}
{% endfor %}
{% endif %}

- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    name: addon-{{ADDON.metadata['id']}}-delete
  spec:
    clusterDeploymentSelector:
      matchLabels:
        {{ADDON.metadata['label']}}-delete: 'true'
    resourceApplyMode: Upsert
    resources:
    - apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          {{ADDON.metadata['label']}}-delete: 'true'
        name: {{ADDON.metadata['targetNamespace']}}
    # first let's keep both the NS and the CF. Later, when
    # all addons are fine with that, we should remove the NS.
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: {{ADDON.metadata['targetNamespace']}}
        labels:
          {{ADDON.metadata['label']}}-delete: 'true'
        name: {{ADDON.metadata['id']}}

{% if ADDON.metadata['pagerduty'] is defined %}
- apiVersion: pagerduty.openshift.io/v1alpha1
  kind: PagerDutyIntegration
  metadata:
    name: addon-{{ADDON.metadata['id']}}
    namespace: pagerduty-operator
  spec:
    acknowledgeTimeout: {{ADDON.metadata['pagerduty']['acknowledgeTimeout']}}
    resolveTimeout: {{ADDON.metadata['pagerduty']['resolveTimeout']}}
    escalationPolicy: {{ADDON.metadata['pagerduty']['escalationPolicy']}}
    servicePrefix: {{ADDON.metadata['id']}}
    pagerdutyApiKeySecretRef:
      name: pagerduty-api-key
      namespace: pagerduty-operator
    clusterDeploymentSelector:
      matchLabels:
          {{ADDON.metadata['label']}}: "true"
    targetSecretRef:
      name: {{ADDON.metadata['pagerduty']['secretName']}}
      namespace: {{ADDON.metadata['pagerduty']['secretNamespace']}}
{% endif %}

{% if ADDON.metadata['deadmanssnitch'] is defined %}
- apiVersion: deadmanssnitch.managed.openshift.io/v1alpha1
  kind: DeadmansSnitchIntegration
  metadata:
    name: addon-{{ADDON.metadata['id']}}
    namespace: deadmanssnitch-operator
  spec:
    {% if ADDON.metadata['deadmanssnitch']['clusterDeploymentSelector'] is defined %}
    clusterDeploymentSelector: {{ADDON.metadata['deadmanssnitch']['clusterDeploymentSelector']}}
    {% else %}
    clusterDeploymentSelector:
      matchExpressions:
      - key: {{ADDON.metadata['label']}}
        operator: In
        values:
        - "true"
    {% endif %}

    dmsAPIKeySecretRef:
      name: deadmanssnitch-api-key
      namespace: deadmanssnitch-operator

    {% if ADDON.metadata['deadmanssnitch']['snitchNamePostFix'] is defined %}
    snitchNamePostFix: {{ADDON.metadata['deadmanssnitch']['snitchNamePostFix']}}
    {% else %}
    snitchNamePostFix: {{ADDON.metadata['id']}} {# Ref: https://gitlab.cee.redhat.com/service/managed-tenants/-/blob/main/addons/ocs-converged-qe/metadata/stage/deadmanssnitch.yaml.j2#L16 and https://gitlab.cee.redhat.com/service/managed-tenants/-/blob/main/addons/ocs-converged/metadata/stage/deadmanssnitch.yaml.j2#L16 #}
    {% endif %}

    tags: {{ADDON.metadata['deadmanssnitch']['tags']}}

    targetSecretRef:
    {% if ADDON.metadata['deadmanssnitch']['targetSecretRef'] is defined and ADDON.metadata['deadmanssnitch']['targetSecretRef']['name'] is defined %}
      name: {{ADDON.metadata['deadmanssnitch']['targetSecretRef']['name']}}
    {% else %}
      name: {{ADDON.metadata['id']}}-deadmanssnitch
    {% endif %}

    {% if ADDON.metadata['deadmanssnitch']['targetSecretRef'] is defined and ADDON.metadata['deadmanssnitch']['targetSecretRef']['namespace'] is defined %}
      namespace: {{ADDON.metadata['deadmanssnitch']['targetSecretRef']['namespace']}}
    {% else %}
      namespace: {{ADDON.metadata['targetNamespace']}}  {# Ref: https://gitlab.cee.redhat.com/service/managed-tenants/-/blob/main/addons/ocs-converged-qe/metadata/stage/deadmanssnitch.yaml.j2#L20 #}
    {% endif %}
{% endif %}

{# extra resources to be deployed to the hive cluster #}
{% if ADDON.metadata['extraResources'] is defined %}
{% for resource in ADDON.metadata['extraResources'] %}
- {{ render_extra_resource(ADDON, resource) | indent(2) }}
{% endfor %}
{% endif %}
